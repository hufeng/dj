/**
 * auto generated by dubbo dj
 * ~~~ ðŸ’— machine coding ðŸ’— ~~~
 */

import { Dubbo, TDubboCallResult, java } from '@dubbo/dubbo-consumer'
import { User, IUser } from '../entity/User'

export interface IUserService {
  sayHello(user: IUser): TDubboCallResult<IUser>
  sayWorld(names: Array<string>): TDubboCallResult<string>
}

export function UserService(dubbo: Dubbo): IUserService {
  return dubbo.proxyService<IUserService>({
    dubboInterface: 'org.apache.dubbo.service.UserService',
    methods: {
      sayHello(user: IUser) {
        return [((v: IUser) => new User(v).__fields2java())(user)]
      },
      sayWorld(names: Array<string>) {
        return [
          ((val: Array<string> = []) =>
            java.List(val.map((v) => java.String(v))))(names),
        ]
      },
    },
  })
}
