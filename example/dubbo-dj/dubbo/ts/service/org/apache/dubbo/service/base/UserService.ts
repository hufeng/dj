/**
 * auto generated by dubbo dj
 * ~~~ ðŸ’— machine coding ðŸ’— ~~~
 */

import java from 'js-to-java'
import { User, IUser } from '../../entity/User'

export default abstract class UserService {
  dubboInterface = 'org.apache.dubbo.service.UserService'

  methods = {
    sayHello: async (user: IUser) => {
      const val = await this.sayHello(user)
      return ((v: IUser) => new User(v).__fields2java())(val)
    },
    sayWorld: async (names: Array<string>) => {
      const val = await this.sayWorld(names)
      return java.String(val)
    },
  }

  abstract sayHello(user: IUser): Promise<IUser>

  abstract sayWorld(names: Array<string>): Promise<string>
}
